function kAmp=amplitudeCalculation(channel,startBSL,endBSL,startPoint,endPoint,calcuTime,fs)

% 用于计算指定通道的数据amplitude,每隔30*10000个点计算一次 ...
% 输入函数需要指定通道 ...
% 已经在每次可能需要更改的地方注释了,为 @#$@#$ ...
% Revised by BF 2016,05,30 ...
% calcuTime is set to 1.

clc;
filePath='\'; % 数据路径  @#$@#$...
fileName='.mat'; % 数据文件的名称 @#$@#$ 此处的文件名可以在Current Folder看到...
load([filePath,fileName]); % load 数据 ....
dataName=data; % 改成指定的数据名称 双击打开数据可以看到一个n*5的matrix里面有数据的名称 ...就是dataName @#$@#$ ...
% if ~exist( 'channel', 'var')||~exist( 'startPoint', 'var')||~exist( 'endPoint', 'var')
%     disp('Please enter the input variables ...');
%     return;
% end

if channel>5
    disp('There are only 5 channels ...');
    return;
end


dataLength=size(dataName(startPoint:end,channel),1); % 数据的总长度 ...
caluIndex=floor(dataLength/fs);
%caluIndex=floor(dataLength/((endPoint-startPoint+1)+fs*calcuTime)); % 计算的次数 ...

if caluIndex<1
    disp('No enough data points ...');
    return;
end

% startPoint=1;% 计算amplitude的起始点
for i=1:caluIndex
    aveBSL=0.5*(dataName(startBSL,channel)+dataName(endBSL,channel));
    PKS=min(dataName(startPoint:endPoint,channel));
    kAmp(i,1)=aveBSL-PKS;
    startBSL=startBSL+(fs*calcuTime);
    endBSL=endBSL+(fs*calcuTime);
    startPoint=startPoint+(fs*calcuTime);
    endPoint=endPoint+(fs*calcuTime);
end
